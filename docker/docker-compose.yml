volumes:
  n8n_storage:
  postgres_storage:
  qdrant_storage:
  certs:
  acme:
  cloudflared_data:

networks:
  syncbricks:
    external: false
  proxy:
    external: false

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - acme:/etc/acme.sh
    networks:
      - proxy

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=$LETSENCRYPT_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - acme:/etc/acme.sh
    networks:
      - proxy

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks: ['syncbricks']
    restart: unless-stopped
    environment:
      - POSTGRES_USER=amjid
      - POSTGRES_PASSWORD=$DB_POSTGRESDB_PASSWORD
      - POSTGRES_DB=n8ndb
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U amjid -d n8ndb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "5433:5432"

  n8n-import:
    image: n8nio/n8n:1.83.2
    container_name: n8n-import
    restart: "no"
    networks:
      - syncbricks
    environment:
      - DB_TYPE=$DB_TYPE
      - DB_POSTGRESDB_HOST=$DB_POSTGRESDB_HOST
      - DB_POSTGRESDB_USER=amjid
      - DB_POSTGRESDB_PASSWORD=$DB_POSTGRESDB_PASSWORD
      - DB_POSTGRESDB_DATABASE=n8ndb
    entrypoint: /bin/sh
    command:
      - "-c"
      - |
        echo "Waiting for database to be ready..."
        while ! nc -z postgres 5432; do
          sleep 1
        done
        echo "Database is ready. Starting import..."
        n8n import:credentials --separate --input=/backup/credentials || true
        n8n import:workflow --separate --input=/backup/workflows || true
        touch /home/node/.n8n/import_done
        exit 0
    volumes:
      - ./n8n/backup:/backup
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    image: n8nio/n8n:1.83.2
    container_name: n8n
    restart: unless-stopped
    networks:
      - syncbricks
      - proxy
    environment:
      - DB_TYPE=$DB_TYPE
      - DB_POSTGRESDB_HOST=$DB_POSTGRESDB_HOST
      - DB_POSTGRESDB_USER=amjid
      - DB_POSTGRESDB_PASSWORD=$DB_POSTGRESDB_PASSWORD
      - DB_POSTGRESDB_DATABASE=n8ndb
      - N8N_DIAGNOSTICS_ENABLED=$N8N_DIAGNOSTICS_ENABLED
      - N8N_PERSONALIZATION_ENABLED=$N8N_PERSONALIZATION_ENABLED
      - N8N_ENCRYPTION_KEY=$N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET=$N8N_USER_MANAGEMENT_JWT_SECRET
      - WEBHOOK_URL=$WEBHOOK_URL
      - VIRTUAL_HOST=$VIRTUAL_HOST
      - LETSENCRYPT_HOST=$LETSENCRYPT_HOST
      - LETSENCRYPT_EMAIL=$LETSENCRYPT_EMAIL
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
    entrypoint: /bin/sh
    command:
      - "-c"
      - |
        echo 'Waiting for dependencies...'
        while ! nc -z postgres 5432 || [ ! -f /home/node/.n8n/import_done ]; do
          sleep 1
        done
        echo 'Dependencies are ready. Starting n8n...'
        sleep 5
        n8n
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['syncbricks']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    networks: ['proxy']
    command: tunnel --no-autoupdate run --token reomveo this and enter your token here 
    volumes:
      - cloudflared_data:/etc/cloudflared
